<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="botonConfirmaUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>